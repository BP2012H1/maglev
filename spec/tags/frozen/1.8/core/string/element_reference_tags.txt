fails:String#[] calls to_int on the given index
fails:String#[] with index, length always taints resulting strings when self is tainted
fails:String#[] with index, length returns nil if the length is negative
fails:String#[] with index, length calls to_int on the given index and the given length
fails:String#[] with index, length returns subclass instances
fails:String#[] with Range returns the substring given by the offsets of the range
fails:String#[] with Range returns an empty string if range.begin is inside self and > real end
fails:String#[] with Range always taints resulting strings when self is tainted
fails:String#[] with Range returns subclass instances
fails:String#[] with Range calls to_int on range arguments
fails:String#[] with Regexp returns the matching portion of self
fails:String#[] with Regexp always taints resulting strings when self or regexp is tainted
fails:String#[] with Regexp returns subclass instances
fails:String#[] with Regexp sets $~ to MatchData when there is a match and nil when there's none
fails:String#[] with Regexp, index always taints resulting strings when self or regexp is tainted
fails:String#[] with Regexp, index returns nil if there is no capture for the given index
fails:String#[] with Regexp, index calls to_int on the given index
fails:String#[] with Regexp, index raises a TypeError when the given index can't be converted to Integer
fails:String#[] with Regexp, index raises a TypeError when the given index is nil
fails:String#[] with Regexp, index sets $~ to MatchData when there is a match and nil when there's none
fails:String#[] with String taints resulting strings when other is tainted
