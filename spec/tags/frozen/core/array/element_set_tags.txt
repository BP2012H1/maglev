fails:Array#[]= sets elements in the range arguments when passed ranges
fails:Array#[]= does nothing if the section defined by range has negative width and the rhs is an empty array
fails:Array#[]= tries to convert Range elements to Integers using #to_int with [m..n] and [m...n]
fails:Array#[]= raises an IndexError when passed indexes out of bounds
fails:Array#[]= calls to_ary on its rhs argument for multi-element sets
fails:Array#[]= with [index, count] removes the section when set to nil if negative index within bounds and cnt > 0
fails:Array#[]= with [index, count] replaces the section to other if idx < 0 and cnt > 0
fails:Array#[]= with [index, count] replaces the section to other even if cnt spanning beyond the array boundary
fails:Array#[]= with [index, count] raises an IndexError when passed start and negative length
fails:Array#[]= with [m..n] inserts the other section at m if m > n
fails:Array#[]= calls to_int on its start and length arguments
