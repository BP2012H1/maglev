fails:String#slice with index, length always taints resulting strings when self is tainted
fails:String#slice with index, length returns subclass instances
fails:String#slice with Range always taints resulting strings when self is tainted
fails:String#slice with Range returns subclass instances
fails:String#slice with Range calls to_int on range arguments
fails:String#slice with Regexp always taints resulting strings when self or regexp is tainted
fails:String#slice with Regexp sets $~ to MatchData when there is a match and nil when there's none
fails:String#slice with Regexp, index returns the capture for the given index
fails:String#slice with Regexp, index always taints resulting strings when self or regexp is tainted
fails:String#slice with Regexp, index returns subclass instances
fails:String#slice with Regexp, index sets $~ to MatchData when there is a match and nil when there's none
fails:String#slice with String taints resulting strings when other is tainted
fails:String#slice! with index returns nil if idx is outside of self
fails:String#slice! with index doesn't raise a TypeError if self is frozen and idx is outside of self
fails:String#slice! with index, length always taints resulting strings when self is tainted
fails:String#slice! with index, length calls to_int on idx and length
fails:String#slice! with index, length returns subclass instances
fails:String#slice! Range always taints resulting strings when self is tainted
fails:String#slice! Range returns subclass instances
fails:String#slice! with Regexp always taints resulting strings when self or regexp is tainted
fails:String#slice! with Regexp returns subclass instances
fails:String#slice! with Regexp sets $~ to MatchData when there is a match and nil when there's none
fails:String#slice! with Regexp, index always taints resulting strings when self or regexp is tainted
fails:String#slice! with Regexp, index returns subclass instances
fails:String#slice! with Regexp, index sets $~ to MatchData when there is a match and nil when there's none
fails:String#slice! with String returns a subclass instance when given a subclass instance
