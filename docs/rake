== MagLev Rake Commands

Run <tt>rake -D</tt> for full documentation of all the MagLev rake tasks.


=== Admin Tasks in <tt>maglev:</tt> Namespace

The <tt>maglev:</tt> namespace holds the rake tasks for administration of the
MagLev Server.

  rake maglev:force-reload  # Stop MagLev server, overwrite with empty repository!!!
  rake maglev:restart       # Restart MagLev server processes.
  rake maglev:start         # Start MagLev server processes, if not already running.
  rake maglev:start-debug   # Start the MagLev processes with verbose output.
  rake maglev:status        # Display MagLev server status.
  rake maglev:stop          # Stop the MagLev processes.
  rake maglev:topaz         # Run topaz (use rlwrap, if available)
  rake maglev:topaz-debug   # Run debug topaz (use rlwrap, if available)

* There are <tt>-debug</tt> versions of several of the commands, which run
  the associated item with a higher level of debug information.
* The Topaz related tasks start a MagLev VM and leave the developer at the
  <tt>topaz 1></tt> prompt.  See the Debug[link:files/docs/debugging.html]
  section for details on Topaz and debugging


=== RubySpec and MSpec Tasks in <tt>spec:</tt> Namespace

  rake spec:ci              # Run the continuous integration specs (was passingpsecs) on MagLev
  rake spec:debug           # Debug an mspec file: spec=<dir_or_file_name>
  rake spec:debugci         # Run the continuous integration specs on MagLev with debug
  rake spec:mri             # Run the continuous integration specs against MRI
  rake spec:run             # Run an mspec file: spec=<dir_or_file_name>
  rake spec:tag             # Run the named specs and tag the failing ones

* The debug versions of the spec tasks setup MagLev to leave the developer
  at the Topaz prompt if there is a spec failure or an uncaught exception.
* For the spec tasks that require a spec parameter, pass the parameter in
  with <tt>spec=...</tt>, e.g.,:
    rake spec:run spec=spec/rubyspec/1.8/core/string/append_spec.rb
  The spec may be a file or directory.


=== Miscellaneous

The Standard documentation, clean and clobber targets:

  rake rdoc                 # Build the rdoc HTML Files
  rake rerdoc               # Force a rebuild of the RDOC files

  rake clean                # Remove any temporary products.
  rake clobber              # Remove any generated file.
  rake clobber_rdoc         # Remove rdoc products

* The rdoc gets dumped into <tt>$MAGLEV_HOME/html</tt>

=== Developer tasks

The developer tasks are specific to the GemStone MagLev development
environment and may depend on files not shipped with the Alpha release.
Run at your own risk:

  rake dev:bm-tests         # Run the bm smoke tests (depends on ../gss64bit_30/*)
  rake dev:ensure_stopped   # Make sure the gemstone server is stopped.
  rake dev:install-latest   # Stop server, install ../latest*, and reload primitives
  rake dev:install-tgz      # Stop current server and install ../latest-product.tgz
  rake dev:loadmcz          # Load the mcz file ../latest.mcz and commit it.
  rake dev:reloadprims      # Reload kernel.rb (primitives) and commit it
  rake dev:vm-tests         # Run the vm smoke tests (depends on ../gss64bit_30/*)

  rake squeak               # Run a squeak image





