= Notes on experimental libyaml based parser

Ruby 1.9 looks like it is moving away from using Syck as the underlying
YAML parser, and going to libyaml: http://pyyaml.org/wiki/LibYAML

This directory contains some experimental wrapper code to prototype using
libyaml for MagLev YAML parsing.

== Psych

Psych: http://github.com/tenderlove/psych, is Aaron Patterson's C-Extension
based port of libyaml to MRI.  The underlying architecture of libyaml is an
event based parser/emitter.  If you are parsing YAML, you get an event
stream back from libyaml.  Psych uses an MRI C-extension to capture the
events, then marshals the data into ruby and calls into a pure Ruby layer
to handle the events.

On top of the event layer, there is a pure ruby AST, and on top of that is
a pure ruby YAML marshalling layer.

== Plan for this code:

The plan for MagLev is to duplicate the C-extension using FFI, and then
(hopefully) use Psych's pure ruby layers unmodified.

* MagLev FFI does not yet support callbacks.
* Need to make sure we manage parsing contexts on a per Ruby Parser basis,
  so we can manage multiple concurrent parsing environments.

== TODO

* Legal: can we compile and ship our own version of libyaml?
* Should we require the user to install a proper 64bit libyaml?


