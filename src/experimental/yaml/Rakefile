require 'rake/clean'

CLEAN.include('lib/libpsych.rb', '*~', 'a.out', 'c/*o')
CLOBBER.include('c/main', 'c/*.dylib', 'c/dmain')

I_DIR = "/Users/pmclain/external/yaml-0.1.3-64/include"
L_DIR = "/Users/pmclain/external/yaml-0.1.3-64/src/.libs"
X_DIR = "/Users/pmclain/GemStone/checkouts/git/src/experimental/yaml/c"

CFLAGS  = "-m64 -Wall -I#{I_DIR}"
LFLAGS  = "-Wall -m64 -L#{L_DIR} -lyaml"

task :default => :run

rule '.rb' => ['.rb.ffi'] do |t|
  dir      = File.dirname  t.source
  ffi_name = File.basename t.source
  rb_name  = File.basename t.name

  require 'lib/libyaml/platform'
  require '/Users/pmclain/external/ffi/lib/ffi/tools/struct_generator'
  require '/Users/pmclain/external/ffi/lib/ffi/tools/const_generator'
  require '/Users/pmclain/external/ffi/lib/ffi/tools/generator'

  puts "Generating #{t.name}..."
  cd dir do
    FFI::Generator.new ffi_name, rb_name, {:cflags => CFLAGS}
  end
end

desc "Run the t.rb file"
task :run => ['lib/libpsych.rb', 'parser:c/libpsych.dylib'] do
  sh "export DYLD_LIBRARY_PATH=#{L_DIR}:#{X_DIR} ; maglev-ruby -Ilib main.rb"
end

namespace :parser do
  desc "Create libpsych.dylib"
  task 'c/libpsych.dylib' => ['c/parser.o'] do
    # gcc -dynamiclib \
    #     -Wl,-headerpad_max_install_names,-undefined,dynamic_lookup,-compatibility_version,1.0,-current_version,1.0,-install_name,/usr/local/lib/libfoo.1.dylib
    #     -o libfoo.1.dylib $(OBJ)
    opts = "-L#{L_DIR} -lyaml"
    sh "gcc -m64 -dynamiclib #{opts} -o c/libpsych.dylib c/parser.o"
  end

  file 'c/parser.o' do
    # gcc -m64 -Wall -I/Users/pmclain/external/yaml-0.1.3-64/include -c -o parser.o parser.c
    sh "gcc #{CFLAGS} -c -o c/parser.o c/parser.c"
  end
end
