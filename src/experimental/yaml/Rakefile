require 'rake/clean'

CLEAN.include('*~', 'a.out', 'c/*o', 'gem_*_code.log')
CLOBBER.include('c/libpsych.*')

YAML_DIR = "#{ENV['HOME']}/external/yaml-0.1.3"
FFI_DIR  = "#{ENV['HOME']}/external/ffi"

I_DIR = "#{YAML_DIR}/include"
L_DIR = "#{YAML_DIR}/src/.libs"
X_DIR = "#{ENV['HOME']}/GemStone/checkouts/git/src/experimental/yaml/c"

UNAME = `uname`.chomp
case UNAME
when "Linux"
  CFLAGS   = "-m64 -Wall -g -I#{I_DIR} -fPIC"
  DL_EXT   = 'so'
  SH_L_PATH = "LD_LIBRARY_PATH=#{L_DIR}:#{X_DIR}"
when "Darwin"
  CFLAGS  = "-m64 -Wall -g -I#{I_DIR}"
  DL_EXT   = 'dylib'
  SH_L_PATH = "DYLD_LIBRARY_PATH=#{L_DIR}:#{X_DIR}"
else
  raise "Rakefile doesn't support #{`uname`}"
end

LIBTEST  = "c/libtest.#{DL_EXT}"
LIBPSYCH = "c/libpsych.#{DL_EXT}"

LFLAGS  = "-Wall -m64 -L#{L_DIR} -lyaml"

task :default => :run

desc "Create #{LIBPSYCH} dynamic libraray"
task :libpsych => ["parser:#{LIBPSYCH}"]

rule '.o' => ['.c'] do |t|
  cd( File.dirname(t.source) ) do
    sh "gcc #{CFLAGS} -c -o #{File.basename t.name} #{File.basename t.source}"
  end
end

desc "Run the t.rb file"
task :run => ['lib/libpsych.rb', "parser:#{LIBPSYCH}"] do
  sh "export #{SH_L_PATH} ; maglev-ruby -d -Ilib main.rb"
end

namespace :parser do
  task "#{LIBPSYCH}" => ['c/parser.o'] do
    opts = "-L#{L_DIR} -lyaml"

    case UNAME
    when "Linux"
      sh "gcc -shared #{opts} -m64 -Wl,-soname -Wl,#{File.basename LIBPSYCH} -o #{LIBPSYCH} c/parser.o"
    when "Darwin"
      sh "gcc -m64 -dynamiclib #{opts} -o #{LIBPSYCH} c/parser.o"
    else
      raise "Rakefile doesn't support #{`uname`}"
    end
  end

  desc "Compile files with lots of warnings"
  task :lint do
    rm_f 'c/parser.o'
    puts "LINT:  gcc #{CFLAGS} -Wall -O2 -c -o c/parser.o c/parser.c"
    sh "gcc #{CFLAGS} -Wall -O2 -c -o c/parser.o c/parser.c"
  end
end

namespace :test do
  desc "Test the emitter code from ruby"
  task :emitter do
    sh "export #{SH_L_PATH} ; maglev-ruby -Ilib test_emitter.rb"
  end

  desc "Create #{LIBTEST}"
  task "#{LIBTEST}" => ['c/test.o'] do
    opts = ""
    case UNAME
    when "Linux"
      sh "gcc -shared #{opts} -m64 -Wl,-soname -Wl,#{LIBTEST} -o #{LIBTEST} c/test.o"
    when "Darwin"
      sh "gcc -m64 -dynamiclib #{opts} -o #{LIBTEST} c/test.o"
    else
      raise "Rakefile doesn't support #{`uname`}"
    end
  end
end

desc "Run the t.rb file"
task :testit => ['lib/libtest.rb', "test:#{LIBTEST}"] do
  case UNAME
  when "Linux"
    p = "LD_LIBRARY_PATH"
  when "Darwin"
    p = "DYLD_LIBRARY_PATH"
  end
  cmd = "export #{p}=#{L_DIR}:#{X_DIR} ; maglev-ruby -d -Ilib test.rb"
  sh cmd
end

