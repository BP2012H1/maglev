require 'rake/clean'

CLEAN.include('lib/libyaml/libyaml.rb', '*~', 'a.out', 'c/*o', 'c/parser')

task :default => :test

desc "run a small test program against the generated yaml2.rb"
task :test => 'lib/libyaml/libyaml.rb' do
  #sh "ruby -Ilib main.rb"
  sh "maglev-ruby -Ilib main.rb"
end

desc "run libyaml.rb.ffi through the struct generator"
file 'lib/libyaml/libyaml.rb' => 'lib/libyaml/libyaml.rb.ffi' do |t|

  require 'lib/libyaml/platform'

  require '/Users/pmclain/external/ffi/lib/ffi/tools/struct_generator'
  require '/Users/pmclain/external/ffi/lib/ffi/tools/const_generator'
  require '/Users/pmclain/external/ffi/lib/ffi/tools/generator'

  puts "Generating #{t.name}..." # if Rake.application.options.trace
  cd 'lib/libyaml' do
    FFI::Generator.new 'libyaml.rb.ffi', 'libyaml.rb', {:cflags => '-m64'}
  end
end


namespace :parser do
  I_DIR = "/Users/pmclain/external/yaml-0.1.3-64/include"
  L_DIR = "/Users/pmclain/external/yaml-0.1.3-64/src/.libs"

  CFLAGS  = "-m64 -Wall -I#{I_DIR}"
  LFLAGS  = "-Wall -m64 -L#{L_DIR} -lyaml"

  desc "Run the test parser on some input"
  task :run => 'c/parser' do
    sh 'export DYLD_LIBRARY_PATH=/Users/pmclain/external/yaml-0.1.3-64/src/.libs ; c/parser'
  end

  task 'c/parser' => ['c/parser.o'] do
    # gcc -Wall -m64 -L/Users/pmclain/external/yaml-0.1.3-64/src/.libs -lyaml  parser.o -o parser
    sh "gcc #{LFLAGS} c/parser.o -o c/parser"
  end

  file 'c/parser.o' do
    # gcc -m64 -Wall -I/Users/pmclain/external/yaml-0.1.3-64/include -c -o parser.o parser.c
    sh "gcc #{CFLAGS} -c -o c/parser.o c/parser.c"
  end
end
