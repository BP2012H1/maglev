= Getting MagLev to work with Lighttpd and SCGI

This directory contains an example of running a MagLev web-app using
Lighttpd and SCGI.  SCGI was chosen as there is a pure ruby gem for it.

== Setup

1. Make sure you have Lighttpd installed (not covered here).
2. Install gems into maglev:

     $ maglev-gem install scgi rack sinatra

== Run

To start the MagLev SCGI process:

  $ rake maglev

Then, from another shell, start lighttpd:

  $ rake server

You should then be able to connect to http://localhost:3000/foo.scgi

== Profiling MagLev

The <tt>rack_app.rb</tt> file contains a simple rack based app that can be
used in conjunction with the <tt>abprof</tt> rake task to profile MagLev in
a web environment.  In three separate shells:

  $ maglev-ruby rack_app.rb    # start maglev in an scgi instance
  $ rake server                # start lighttpd talking to scgi
  $ rake abprof                # profile maglev


== Configuration

=== IPV4 vs IPV6 issues

lighttpd supports ipv6, but the mod_scgi plugin doesn't seem to support it,
so the ruby SCGI server needs to open an IPV4 socket for SCGI
communications.  By default in MRI, Rack::Handler::SCGI is opening an IPV6
socket on localhost.  I believe it is because the getaddrinfo sys call is
returning an ipv6 address first on my mac:

   p Socket.getaddrinfo("localhost", 4567)
   [["AF_INET6", 4567, "localhost", "::1", 30, 2, 17],
    ["AF_INET6", 4567, "localhost", "::1", 30, 1, 6],
    ["AF_INET6", 4567, "localhost", "fe80::1%lo0", 30, 2, 17],
    ["AF_INET6", 4567, "localhost", "fe80::1%lo0", 30, 1, 6],
    ["AF_INET", 4567, "localhost", "127.0.0.1", 2, 2, 17],
    ["AF_INET", 4567, "localhost", "127.0.0.1", 2, 1, 6]]

As a workaround, in rack_app.rb, I explicitly open an
IPV4 tcp server socket and pass it into Rack.
