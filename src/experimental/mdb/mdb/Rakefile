task :default => :commit

ENV['MAGLEV_OPTS'] = '-MnoRlwrap -Ilib'   # Get rid of -d etc.
#ENV['MAGLEV_OPTS'] = '-Ilib -d'
#ENV['MAGLEV_OPTS'] = '-MnoRlwrap -Ilib -MtraceLoad'
#ENV['MAGLEV_OPTS'] = '-Ilib -d -MtraceLoad'

# desc "Commit the MDB Server code to the repository."
# task :commit, :force do |t,args|
#   sh %{ maglev-ruby commit_code.rb #{args.force} }
# end
desc "Commit the MDB Server code to the repository."
task :commit do
  sh %{ maglev-ruby -MnoRlwrap commit_code.rb }
end

desc "Run tets: requires rubygems installed and a patched minitest gem"
task :test => [:'test:mdb', :'test:json', :'test:persistence']

namespace :test do
  desc "Run the persistence tests."
  task :persistence => :commit do
    sh 'ruby test/test_persistence.rb'
  end

  desc "Run the MDB::* tests."
  task :mdb => [:commit, :mdb_fixtures] do
    ['server_tests.rb', 'database_tests.rb'].each do |test|
      sh %{ maglev-ruby -Itest test/#{test} }
    end
  end


  task :mdb_fixtures do
    sh %{ maglev-ruby -MnoRlwrap test/mdb_fixtures.rb }
  end

  # Test for the (new) Marshal based server
  desc "Test the Marshal server"
  task :server => :'test:server:server'
  namespace :server do
    task :fixtures do
      sh %{ maglev-ruby -MnoRlwrap test/json_server/fixtures.rb }
    end
    task :server => [:commit, :fixtures] do
      sh 'maglev-ruby -Itest test/json_server/mdb_server_tests.rb'
    end
  end

  # Tests for the (original) JSON based server

  desc "Test the json server"
  task :json => :'test:json:server'
  namespace :json do
    task :fixtures do
      sh %{ maglev-ruby -MnoRlwrap test/json_server/fixtures.rb }
    end
    task :server => [:commit, :fixtures] do
      sh 'maglev-ruby -Itest test/json_server/mdb_server_tests.rb'
    end
  end
end


# These tasks control the RESTful mdb_server.rb Sinatra app
namespace :server do
  desc "Start the mdb_server app"
  task :start do
    sh %{ $MAGLEV_HOME/bin/rackup server.ru }
  end

  desc "List the databases in the server"
  task :list do
    sh %{ maglev-ruby -e 'p MDB::Server.db_names' }
  end

end
