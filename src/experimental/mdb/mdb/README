= MDB: MagLev Data Base

MDB is a document / object oriented database implemented on the MagLev VM
and persistent object repository.  Documents are stored in MDB as Plain Old
Ruby Objects and queries / views are implemented as plain old ruby methods.

== Features

* Documents are plain old ruby objects
* Views are defined in Ruby
* REST api for communicating with the DB (similar to CouchDB)
* Databases may be indexed on attributes of the documents held in the
  database.

== Overview

MDB::Server provides a RESTful CRUD api to manage MDB::Databases
instances, plus a few methods to get Server information.

MDB::Database manages a collection of documents, and manages views onto those
objects.

== Example

== TODO
* Need a way to upload a set of files from the app dir to MDB.  These would
  be the app's model files.  They might require certain other packages etc.

* DRb isn't running yet on Maglev (thread.rb mutex clashes with st mutex
  and threading).

* Phase 1:
  * Serialize ruby objects and store as ruby on MDB.
  * Keep a plain old hash of the objects
  * Server creates object ids (using shared persistent counters)
  * Use HTTP and have Content-type application/mdb; the body is Marshaled
    string.
* Phase 2:
  * Allow "stored procedures" on the MDB server to take object subgraphs
    and snap them into a larger object graph on server.
  * Allow methods to run on the larger graph.
  * Either get DRb working, or just use raw sockets and marshal

* Still need to get Marshal format working well
