# Features from the Rails blog example that are not yet addressed:
# * Post model:
#      validates_presence_of :name, :title
#      validates_length_of :title, :minimum => 5
#
# * All of the ActiveRecord finders (find_by...(title, content, name,...)
#
# Things to consider:
#
# * Finders: Find by title, id (do we need to expose id?)
# * sort posts by number of comments
# * cascade delete: delete a blogentry -> delete the comments



The following commented out code is from the rails 2.2.2 blog example
write-up.  Should mine this for ideas to add to the example.

# $ script/generate scaffold Post name:string title:string content:text

# class Post < ActiveRecord::Base
#   validates_presence_of :name, :title
#   validates_length_of :title, :minimum => 5
#   has_many :comments
# end

# class CreatePosts < ActiveRecord::Migration
#   def self.up
#     create_table :posts do |t|
#       t.string :name
#       t.string :title
#       t.text :content

#       t.timestamps
#     end
#   end

#   def self.down
#     drop_table :posts
#   end
# end





# $ script/generate model Comment commenter:string body:text post:references

# class CreateComments < ActiveRecord::Migration
#   def self.up
#     create_table :comments do |t|
#       t.string :commenter
#       t.text :body
#       t.references :post

#       t.timestamps
#     end
#   end

#   def self.down
#     drop_table :comments
#   end
# end

# class Comment < ActiveRecord::Base
#   belongs_to :post
# end

# class Comment
#   def initialize(blog_entry, text, date=Time.now)
#     @blog_entry, @text, @date = blog_entry, text, date
#   end

#   def to_s
#     "A comment to #{@blog_entry.title} made on: #{@date}: #{@text}"
#   end
# end

# class CommentsController < ApplicationController
#   def index
#     @post = Post.find(params[:post_id])
#     @comments = @post.comments
#   end

#   def show
#     @post = Post.find(params[:post_id])
#     @comment = Comment.find(params[:id])
#   end

#   def new
#     @post = Post.find(params[:post_id])
#     @comment = @post.comments.build
#   end

#   def create
#     @post = Post.find(params[:post_id])
#     @comment = @post.comments.build(params[:comment])
#     if @comment.save
#       redirect_to post_comment_path(@post, @comment)
#     else
#       render :action => "new"
#     end
#   end

#   def edit
#     @post = Post.find(params[:post_id])
#     @comment = Comment.find(params[:id])
#   end

#   def update
#     @post = Post.find(params[:post_id])
#     @comment = Comment.find(params[:id])
#     if @comment.update_attributes(params[:comment])
#       redirect_to post_comment_path(@post, @comment)
#     else
#       render :action => "edit"
#     end
#   end

# end

