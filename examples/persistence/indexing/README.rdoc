= MagLev indexing example

This directory contains an example of using MagLev's built-in indexing
support to provide fast, search on unordered collections.  There are two
demos and some tests.

== Simple Demo

<tt>index_example.rb</tt> is a single file overview of indexing with
comments.  This is probably the first file to look at.  To run it:

  $ rake demo

NOTE: if you get an error message like:
  #<RuntimeError: The object aPerson does not have an instance variable with the given name #'@age'>
you need to define the instance variables as fixed using
__fixed_instvars('@age') in the class definition.  We expect to update the
indexing system to allow dynamic inst vars in the near future.

== Persistent Demo

<tt>create_random_people.rb</tt> and <tt>search_random_people.rb</tt>
comprise a second example using MagLev persistence with the indexes.
<tt>

<tt>create_random_people.rb</tt> creates a collection of 100,000 random
people, indexes the collection on the 'age' field, and then commits it to
the repository.

<tt>search_random_people.rb</tt> runs indexed and non-indexed queries
against the persisted data.

To run:

  $ rake commit          # runs create_random_people (100k) and commits
  $ rake commit:data_1m  # creates a larger data set (1 million people)
  $ rake search          # runs search_random_people against the committed dataset

== Lib

The lib directory contains the base code that defines the Person class, and
supports creating random instances.


