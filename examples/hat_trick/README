This directory holds a recreation of the "Hat Trick" performed by Avi Bryant
at RailsConf 2008, which you can see at http://vimeo.com/1147409

Each time you invoke maglev-ruby, you are starting a fresh VM, but it can
see the persistent effects from previous runs of other VMs.  One VM creates
an empty hat.  Then another VM adds a rabbit to the hat.  And finally,
another VM shows the contents of the results from the first two VMs.

First, run this to create a new hat.

  $ maglev-ruby create_hat.rb

Next, run these in any order as many times as you wish.

  $ maglev-ruby add_rabbit_to_hat.rb
  $ maglev-ruby show_hat_contents.rb

To empty the hat and start over, run

  $ maglev-ruby create_hat.rb



If you notice, the object_id for the hat is the same throughout the demo
(until you create a new hat).  That is because one instance of a hat is
created and saved in the repository, and all VMs will see it.

  $ maglev-ruby create_hat.rb
  Created empty hat at Maglev::PERSISTENT_ROOT[:hat]:    #<Hat:0x12d13101 @contents=[]>

  $ maglev-ruby show_hat_contents.rb
  The hat contains 0 rabbits
  #<Hat:0x12d13101 @contents=[]>

  $ maglev-ruby add_rabbit_to_hat.rb

  $ maglev-ruby show_hat_contents.rb
  The hat contains 1 rabbits
  #<Hat:0x12d13101 @contents=[
   () ()
  ( '.' )
  (")_(")
  ]>

  $ maglev-ruby add_rabbit_to_hat.rb
  $ maglev-ruby add_rabbit_to_hat.rb
  $ maglev-ruby show_hat_contents.rb
  The hat contains 3 rabbits
  #<Hat:0x12d13101 @contents=[
   () ()
  ( '.' )
  (")_(")
  ,
   () ()
  ( '.' )
  (")_(")
  ,
   () ()
  ( '.' )
  (")_(")
  ]>
