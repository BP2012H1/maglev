This directory contains files that demonstrate MagLev persistence in a web
app setting.  The app is a simple blog.

README

The application files:
----------------------
  blog.rb                  Defines class Blog
  post.rb                  Defines class Post
  sinatra_blog.rb          The Sinatra Application File
  txn_wrapper.rb           Rack Middleware: wraps http req in a Gemstone txn
  views/                   Sinatra View ERB templates

Files to run the app
--------------------

RubyGems is not yet working under MagLev, so the normal rackup doesn't
work.  The following files are used to run the application:

  config.ru                A Rackup config file for the app
  launch.rb                Emulate bin/rackup; see comments in file

Run the application
-------------------

You can run the application by doing:

  $ maglev-ruby launch.rb

Then you can hit http://localhost:4567/

You can run also invoke the blog app as a Sinatra app like this, as long as
you haven't previously committed the code:

  $ maglev-ruby sinatra_blog.rb

If the blog app is launched in this manner, then it is run from the at_exit
handler of the sinatra_blog.rb script.  This is ok, unless sinatra_blog.rb
has been committed by a previous Gemstone.beginTransaction.  Once that is
done, the at_exit handler is no longer setup correctly upon re-reading the
blog app.  The txn_wrapper.rb wraps each http request in a gemstone
transaction, so the first time you run the app, and hit the url, then you
end up committing the code.  The app will continue to run in the context of
the initial VM, but no new VMs, started via 'maglev-ruby sinatra_blog.rb',
will actually invoke the app.


Limitations
-----------

* Right now, doing "<%= yield %>" doesn't work in an ERB template, so we're
  not using layouts with yield yet.


