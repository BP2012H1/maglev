= Example WEB Stack for MagLev

This directory contains a sample web application and configuration files
that implement a standard WEB stack for MagLev.

The sample application is used to measure performance of various aspects of
the web environement from serving static pages, to complex reads and
complex reads and writes.

== Sample Application

The sample application is a social tagging site (Delicio.us, flickr,
etc.).

== Options

Each subsection describes a particular HTTP to MagLev connection strategy,
describes how to configure it and discusses some pros and cons for that
strategy.

List of HTTP Servers
* WEBrick
* Apache
* nginx
* lighttpd
* LiteSpeed

List of HTTPd to WebAppServer protocols
* SCGI
* FCGI
* CGI
* LSAPI

Other
* Mongrel (evented, swiftiplied)
* EventMachine
* Thin
* LSAPI LiteSpeed Web Server (lsws)

=== WEBrick
==== Description
==== Configuration
==== Pros / Cons

=== SCGI
==== Description
==== Configuration
==== Pros / Cons

On the plus size, SCGI is easy to setup.

=== FCGI
==== Description
==== Configuration
==== Pros / Cons

=== Not Considered

* EventMachine based solutions were not considered, since MagLev does not
  support Ruby C-extensions.




== TODO

1. The transaction wrapper is committing on too many requests:
   * get /login and other non modifying pages
   * get /magtag.css, get /favicon.ico  (which should really be served by
     the frontend HTTP server, and not dealt with by Sinatra).


== Things to test

1. Compare maglev performance with txn wrapper on static page, /magtag.css,
   without txn_wrapper to see what the txn wrapper overhead is.

== Notes

* ab on Mac does not like "localhost", use "127.0.0.1" instead.
