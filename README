
To get the HTML version of this and other documentation:

  $ rake rdoc
  $ open html/index.html in your web browser of choice

== Prerequisites

=== MRI Ruby and required gems

You will need the following MRI Ruby resources on your machine:

1. MRI Ruby 1.8.6
2. Ruby Gems
3. ParseTree gem version 2.2.0 (version 3.x will not work).
4. Rake

=== Install MagLev

This README assumes you've installed MagLev by running the appropriate
<tt>installMaglev-<system>.sh</tt> or <tt>upgradeMaglev-<system>.sh</tt>,
and have set your <tt>MAGLEV_HOME</tt> and <tt>PATH</tt> variables
appropriately:

  export MAGLEV_HOME=<path_to_the_directory_containing_this_README>
  export PATH=$MAGLEV_HOME/bin:$PATH

== Quick Start
=== Check status of MagLev server

Ensure the MagLev repository server is running.  To check if a server is
running, run <tt>rake maglev:status</tt>, or simply, <tt>rake</tt>:

  $ cd $MAGLEV_HOME
  $ rake maglev:status
  (in /Users/pmclain/projects/MagLev-20645.MacOSX)
  GemStone server not running.
  MagLev Parse Server is not running on port 2002

If a server is running, you'll see output like:

  $ rake
  (in /Users/pmclain/projects/MagLev-20645.MacOSX)

  MAGLEV_HOME = /Users/pmclain/projects/MagLev-20645.MacOSX
  Status  Version    Owner    Pid   Port   Started     Type  Name
  ------ --------- --------- ----- ----- ------------ ------ ----
    OK   3.0.0     pmclain   38889 50377 Dec 08 13:21 Netldi gs64ldi
    OK   3.0.0     pmclain   38892 60165 Dec 08 13:21 Stone  gs64stone
    OK   3.0.0     pmclain   38893 60157 Dec 08 13:21 cache  gs64stone@cairo.gemstone.com

  MagLev Parse Server port = 2002
  COMMAND   PID    USER   FD   TYPE    DEVICE SIZE/OFF NODE NAME
  ruby    38918 pmclain    3u  IPv6 0x3c524bc      0t0  TCP *:2002 (LISTEN)
  ruby    38918 pmclain    4u  IPv4 0x6d63e64      0t0  TCP *:2002 (LISTEN)


=== Start the MagLev server

If a server is not running, then start one with rake:

     $ cd $MAGLEV_HOME
     $ rake maglev:start

=== <tt>maglev-ruby</tt>: Execute a Ruby file

You should now be able to run a simple ruby script:

  $ cat > hello.rb
  puts "Hello from MagLev"
  ^D
  $ maglev-ruby hello.rb
  topaz 1> Hello from MagLev
  nil
  topaz 1>
  $

Note: The first time (and only the first time) MagLev is run after an
install, there is a short pause while the system loads the files in
<tt>src/kernel/*</tt>.

=== <tt>maglev-irb</tt>: Open an interactive maglev shell

MagLev provides an IRB-like utility, <tt>$MAGLEV_HOME/bin/maglev-irb</tt>.
It provides a minimal interactive environment with some limitations:

  $ maglev-irb
  >> 1 + 1
  => 2
  *> puts "Hi"
  Hi
  => nil
  *> ^D
  $


See {<tt>maglev-irb</tt>}[link:files/docs/maglev-irb.html] for details.


=== Next Steps

==== Examples

You can try running the scripts in the +examples+ directory.  Currently,
there is only one sample that starts a webrick server which you can connect
to at [http://localhost:2000/].  To run the script, make sure
<tt>maglev-ruby</tt> is on your path, and then:

  $ $MAGLEV_HOME/examples/webrick/time_server.rb

==== Further reading

The following documentation explains more:

Errata[link:files/docs/Errata-alpha.html]::  Errata for the current release.
Admin[link:files/docs/maglev-server.html]::  How to start and stop the MagLev server.
Debug[link:files/docs/debugging.html]::      How to run MagLev in debug mode
Source[link:files/docs/source.html]::        Guide to the source code layout
Specs[link:files/docs/rubyspecs.html]::      Running +mspec+ and +rubyspecs+ with MagLev
Rake[link:files/docs/rake.html]::            Rake tasks for MagLev
{<tt>maglev-irb</tt>}[link:files/docs/maglev-irb.html]:: MagLev interactive utility.


=== Note:
* set <tt>MAGLEV_HOME</tt> to the full path of this directory, and add
  <tt>$MAGLEV_HOME/bin</tt> to your <tt>PATH</tt>. Then you can use
  <tt>maglev-ruby</tt> etc from anywhere.
* if you have multiple installations, set <tt>PARSETREE_PORT</tt> to
  control which port the parser server listens on
* the first (and only the first) time you run a maglev command that runs
  Ruby code, it will load and compile its primitives, which takes up to a
  minute to run.
* <tt>maglev-ruby</tt> prints a topaz banner every time it is
  run. <tt>maglev-irb</tt> does not, but it will make errors more difficult
  to debug, as they won't return to Topaz.

=== Ruby code:
* <tt>src/</tt> and <tt>src/lib/</tt> are both on the require path
* <tt>src/kernel/</tt> has the core +Array+, +String+ etc. files

