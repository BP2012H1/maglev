output pushnew log/allspec.out
run
| specCount lf confFile specOutF |
GsNMethod traceIR: false .
RubyContext load .
RubyContext requireFileNamed: 'mspec.rb' .
RubyContext save .
System commitTransaction ifFalse:[ nil error:'commit fail'].

specCount := 1 .
lf := Character lf .
confFile := GsFile openReadOnServer: '../gss64bit_3.0/tests/rubytst/passingspecs.conf' .
[ true ] whileTrue:[
  | aLine fullPath specResult |
  [
    aLine := confFile nextLine .
    aLine == nil ifTrue:[
      ^ specCount "hit eof"
    ].
    aLine first == $#
  ] whileTrue .
  aLine last == lf ifTrue:[ aLine size: (aLine size - 1) ].
  fullPath := '../rubyspec/1.8/' , aLine .
  GsFile gciLogServer:'--- start ', specCount asString , ' :' , aLine .
  System beginTransaction .
  RubyContext load .
  specOutF := GsFile openWriteOnServer:'log/spec', specCount asString , '.out' .
  GsFile redirectStdout: specOutF .
  specResult := RubyContext loadFileNamed: fullPath .
  specOutF close .
  GsFile redirectStdout: nil .
  GsFile gciLogServer:'--- end ' , aLine .
  specCount := specCount + 1 .
]
%
output pop
