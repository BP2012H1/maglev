output pushnew log/allbench.out
run
| bmCount lf confFile bmOutF |
GsNMethod traceIR: false .
RubyContext load .
RubyContext requireFileNamed: 'benchmark.rb' .
RubyContext save .
System commitTransaction ifFalse:[ nil error:'commit fail'].

bmCount := 1 .
lf := Character lf .
confFile := GsFile openReadOnServer: '../gss64bit_3.0/tests/rubytst/benchmark.conf' .
[ true ] whileTrue:[
  | aLine fullPath bmResult |
  [
    aLine := confFile nextLine .
    aLine == nil ifTrue:[
      ^ bmCount "hit eof"
    ].
    aLine first == $# 
  ] whileTrue .
  aLine last == lf ifTrue:[ aLine size: (aLine size - 1) ].
  fullPath := '../benchmark/' , aLine .
  GsFile gciLogServer:'--- start ', bmCount asString , ' :' , aLine .
  System beginTransaction .
  RubyContext load .
  bmOutF := GsFile openWriteOnServer:'log/bench', bmCount asString , '.out' .
  GsFile redirectStdout: bmOutF .
  bmResult := RubyContext loadFileNamed: fullPath .
  bmOutF close . 
  GsFile redirectStdout: nil .
  GsFile gciLogServer:'--- end ' , aLine .
  bmCount := bmCount + 1 .
]
%
output pop
