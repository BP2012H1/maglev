output pushnew log/allvmunit.out
run
| bmCount lf confFile bmOutF |
bmCount := 1 .
lf := Character lf .
confFile := GsFile openReadOnServer: 'src/test/vmunit.conf' .
[ true ] whileTrue:[
  | aLine bmResult |
  [
    aLine := confFile nextLine .
    aLine == nil ifTrue:[
      ^ bmCount "hit eof"
    ].
    aLine first == $#
  ] whileTrue .
  aLine last == lf ifTrue:[ aLine size: (aLine size - 1) ].
"  GsFile gciLogServer:'===== ', RubyDirectory _getwd . "
  GsFile gciLogServer:'--- start ', bmCount asString , ' :' , aLine .
  System beginTransaction .
  System signalAlmostOutOfMemoryThreshold:70 . "TODO: rm: Debug stack full in dev"
  RubyContext load .
  RubyContext default _addLibs: (RubyDirectory _getwd, '/src/test/') .
  bmOutF := GsFile openWriteOnServer:'log/vmunit', bmCount asString , '.out' .
  GsFile redirectStdout: bmOutF .
  bmResult := RubyContext loadFileNamed: aLine .
  bmOutF close .
  GsFile redirectStdout: nil .
  GsFile gciLogServer:'--- end ' , aLine .
  bmCount := bmCount + 1 .
].
%
output pop

